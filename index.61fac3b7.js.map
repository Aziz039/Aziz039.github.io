{"mappings":"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","sources":["<anon>","js/main.js"],"sourcesContent":["/*--------------------------------------------------------------\n# Initialize AOS Animation Library\n--------------------------------------------------------------*/ document.addEventListener('DOMContentLoaded', function() {\n    // Initialize AOS animation library\n    AOS.init({\n        duration: 800,\n        easing: 'ease-in-out',\n        once: true,\n        mirror: false\n    });\n    // DOM elements\n    const header = document.querySelector('header');\n    const navbar = document.getElementById('navbar');\n    const hamburger = document.querySelector('.hamburger');\n    const navLinks = document.querySelector('.nav-links');\n    const navLinksItems = document.querySelectorAll('.nav-links li a');\n    const backToTopButton = document.getElementById('backToTop');\n    const sections = document.querySelectorAll('section');\n    const filterButtons = document.querySelectorAll('.filter-btn');\n    const projectCards = document.querySelectorAll('.project-card');\n    const contactForm = document.getElementById('contactForm');\n    /*--------------------------------------------------------------\n    # Navbar Functionality\n    --------------------------------------------------------------*/ // Toggle mobile menu\n    hamburger.addEventListener('click', ()=>{\n        hamburger.classList.toggle('active');\n        navLinks.classList.toggle('active');\n    });\n    // Close mobile menu when clicking a nav link\n    navLinksItems.forEach((item)=>{\n        item.addEventListener('click', ()=>{\n            hamburger.classList.remove('active');\n            navLinks.classList.remove('active');\n        });\n    });\n    // Change navbar styles on scroll\n    window.addEventListener('scroll', ()=>{\n        if (window.scrollY > 50) header.classList.add('scrolled');\n        else header.classList.remove('scrolled');\n        // Active menu item based on scroll position\n        let current = '';\n        sections.forEach((section)=>{\n            const sectionTop = section.offsetTop;\n            const sectionHeight = section.clientHeight;\n            if (window.scrollY >= sectionTop - 200) current = section.getAttribute('id');\n        });\n        navLinksItems.forEach((item)=>{\n            item.classList.remove('active');\n            if (item.getAttribute('href').substring(1) === current) item.classList.add('active');\n        });\n        // Show/hide back to top button\n        if (window.scrollY > 300) backToTopButton.classList.add('active');\n        else backToTopButton.classList.remove('active');\n    });\n    /*--------------------------------------------------------------\n    # Back to Top Button Functionality\n    --------------------------------------------------------------*/ backToTopButton.addEventListener('click', (e)=>{\n        e.preventDefault();\n        window.scrollTo({\n            top: 0,\n            behavior: 'smooth'\n        });\n    });\n    /*--------------------------------------------------------------\n    # Project Filtering Functionality\n    --------------------------------------------------------------*/ filterButtons.forEach((button)=>{\n        button.addEventListener('click', ()=>{\n            // Remove active class from all buttons\n            filterButtons.forEach((btn)=>{\n                btn.classList.remove('active');\n            });\n            // Add active class to clicked button\n            button.classList.add('active');\n            const filterValue = button.getAttribute('data-filter');\n            // Filter projects\n            projectCards.forEach((card)=>{\n                if (filterValue === 'all') card.style.display = 'block';\n                else {\n                    const categories = card.getAttribute('data-category').split(' ');\n                    if (categories.includes(filterValue)) card.style.display = 'block';\n                    else card.style.display = 'none';\n                }\n            });\n        });\n    });\n    /*--------------------------------------------------------------\n    # Download CV Button Functionality\n    --------------------------------------------------------------*/ const downloadCvButton = document.getElementById('download-cv');\n    if (downloadCvButton) downloadCvButton.addEventListener('click', (e)=>{\n        e.preventDefault();\n        // You would normally use:\n        window.location.href = '../doc/Abdulaziz Alghamdi CV.pdf';\n    });\n    /*--------------------------------------------------------------\n    # Contact Form Validation\n    --------------------------------------------------------------*/ if (contactForm) contactForm.addEventListener('submit', function(e) {\n        // Basic form validation\n        const name = document.getElementById('name');\n        const email = document.getElementById('email');\n        const message = document.getElementById('message');\n        let isValid = true;\n        if (name.value.trim() === '') {\n            alert('Please enter your name');\n            name.focus();\n            isValid = false;\n            e.preventDefault();\n        } else if (email.value.trim() === '') {\n            alert('Please enter your email');\n            email.focus();\n            isValid = false;\n            e.preventDefault();\n        } else if (!isValidEmail(email.value)) {\n            alert('Please enter a valid email address');\n            email.focus();\n            isValid = false;\n            e.preventDefault();\n        } else if (message.value.trim() === '') {\n            alert('Please enter your message');\n            message.focus();\n            isValid = false;\n            e.preventDefault();\n        }\n        isValid;\n    });\n    // Email validation helper function\n    function isValidEmail(email) {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailRegex.test(email);\n    }\n    /*--------------------------------------------------------------\n    # Smooth Scrolling for All Anchor Links\n    --------------------------------------------------------------*/ document.querySelectorAll('a[href^=\"#\"]').forEach((anchor)=>{\n        anchor.addEventListener('click', function(e) {\n            e.preventDefault();\n            const targetId = this.getAttribute('href');\n            if (targetId === '#') return;\n            const targetElement = document.querySelector(targetId);\n            if (targetElement) window.scrollTo({\n                top: targetElement.offsetTop - 70,\n                behavior: 'smooth'\n            });\n        });\n    });\n});\n\n//# sourceMappingURL=index.61fac3b7.js.map\n","/*--------------------------------------------------------------\n# Initialize AOS Animation Library\n--------------------------------------------------------------*/\ndocument.addEventListener('DOMContentLoaded', function() {\n    // Initialize AOS animation library\n    AOS.init({\n        duration: 800,\n        easing: 'ease-in-out',\n        once: true,\n        mirror: false\n    });\n    \n    // DOM elements\n    const header = document.querySelector('header');\n    const navbar = document.getElementById('navbar');\n    const hamburger = document.querySelector('.hamburger');\n    const navLinks = document.querySelector('.nav-links');\n    const navLinksItems = document.querySelectorAll('.nav-links li a');\n    const backToTopButton = document.getElementById('backToTop');\n    const sections = document.querySelectorAll('section');\n    const filterButtons = document.querySelectorAll('.filter-btn');\n    const projectCards = document.querySelectorAll('.project-card');\n    const contactForm = document.getElementById('contactForm');\n    \n    /*--------------------------------------------------------------\n    # Navbar Functionality\n    --------------------------------------------------------------*/\n    \n    // Toggle mobile menu\n    hamburger.addEventListener('click', () => {\n        hamburger.classList.toggle('active');\n        navLinks.classList.toggle('active');\n    });\n    \n    // Close mobile menu when clicking a nav link\n    navLinksItems.forEach(item => {\n        item.addEventListener('click', () => {\n            hamburger.classList.remove('active');\n            navLinks.classList.remove('active');\n        });\n    });\n    \n    // Change navbar styles on scroll\n    window.addEventListener('scroll', () => {\n        if (window.scrollY > 50) {\n            header.classList.add('scrolled');\n        } else {\n            header.classList.remove('scrolled');\n        }\n        \n        // Active menu item based on scroll position\n        let current = '';\n        \n        sections.forEach(section => {\n            const sectionTop = section.offsetTop;\n            const sectionHeight = section.clientHeight;\n            \n            if (window.scrollY >= (sectionTop - 200)) {\n                current = section.getAttribute('id');\n            }\n        });\n        \n        navLinksItems.forEach(item => {\n            item.classList.remove('active');\n            if (item.getAttribute('href').substring(1) === current) {\n                item.classList.add('active');\n            }\n        });\n        \n        // Show/hide back to top button\n        if (window.scrollY > 300) {\n            backToTopButton.classList.add('active');\n        } else {\n            backToTopButton.classList.remove('active');\n        }\n    });\n    \n    /*--------------------------------------------------------------\n    # Back to Top Button Functionality\n    --------------------------------------------------------------*/\n    backToTopButton.addEventListener('click', (e) => {\n        e.preventDefault();\n        window.scrollTo({\n            top: 0,\n            behavior: 'smooth'\n        });\n    });\n    \n    /*--------------------------------------------------------------\n    # Project Filtering Functionality\n    --------------------------------------------------------------*/\n    filterButtons.forEach(button => {\n        button.addEventListener('click', () => {\n            // Remove active class from all buttons\n            filterButtons.forEach(btn => {\n                btn.classList.remove('active');\n            });\n            \n            // Add active class to clicked button\n            button.classList.add('active');\n            \n            const filterValue = button.getAttribute('data-filter');\n            \n            // Filter projects\n            projectCards.forEach(card => {\n                if (filterValue === 'all') {\n                    card.style.display = 'block';\n                } else {\n                    const categories = card.getAttribute('data-category').split(' ');\n                    if (categories.includes(filterValue)) {\n                        card.style.display = 'block';\n                    } else {\n                        card.style.display = 'none';\n                    }\n                }\n            });\n        });\n    });\n    \n    /*--------------------------------------------------------------\n    # Download CV Button Functionality\n    --------------------------------------------------------------*/\n    const downloadCvButton = document.getElementById('download-cv');\n    if (downloadCvButton) {\n        downloadCvButton.addEventListener('click', (e) => {\n            e.preventDefault();\n\n            // You would normally use:\n            window.location.href = '../doc/Abdulaziz Alghamdi CV.pdf';\n        });\n    }\n    \n    /*--------------------------------------------------------------\n    # Contact Form Validation\n    --------------------------------------------------------------*/\n    if (contactForm) {\n        contactForm.addEventListener('submit', function(e) {\n            // Basic form validation\n            const name = document.getElementById('name');\n            const email = document.getElementById('email');\n            const message = document.getElementById('message');\n            let isValid = true;\n            \n            if (name.value.trim() === '') {\n                alert('Please enter your name');\n                name.focus();\n                isValid = false;\n                e.preventDefault();\n            } else if (email.value.trim() === '') {\n                alert('Please enter your email');\n                email.focus();\n                isValid = false;\n                e.preventDefault();\n            } else if (!isValidEmail(email.value)) {\n                alert('Please enter a valid email address');\n                email.focus();\n                isValid = false;\n                e.preventDefault();\n            } else if (message.value.trim() === '') {\n                alert('Please enter your message');\n                message.focus();\n                isValid = false;\n                e.preventDefault();\n            }\n            \n            if (isValid) {\n                // FormSubmit handles the actual form submission\n                // Additional client-side code could go here if needed\n            }\n        });\n    }\n    \n    // Email validation helper function\n    function isValidEmail(email) {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailRegex.test(email);\n    }\n    \n    /*--------------------------------------------------------------\n    # Smooth Scrolling for All Anchor Links\n    --------------------------------------------------------------*/\n    document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\n        anchor.addEventListener('click', function(e) {\n            e.preventDefault();\n            \n            const targetId = this.getAttribute('href');\n            \n            if (targetId === '#') return;\n            \n            const targetElement = document.querySelector(targetId);\n            \n            if (targetElement) {\n                window.scrollTo({\n                    top: targetElement.offsetTop - 70, // Adjust for header height\n                    behavior: 'smooth'\n                });\n            }\n        });\n    });\n});\n"],"names":["document","addEventListener","AOS","init","duration","easing","once","mirror","header","querySelector","getElementById","hamburger","navLinks","navLinksItems","querySelectorAll","backToTopButton","sections","filterButtons","projectCards","contactForm","classList","toggle","forEach","item","remove","window","scrollY","add","current","section","sectionTop","offsetTop","clientHeight","getAttribute","substring","e","preventDefault","scrollTo","top","behavior","button","btn","filterValue","card","style","display","categories","split","includes","downloadCvButton","location","href","name","email","message","value","trim","alert","focus","emailRegex","test","anchor","targetId","targetElement"],"version":3,"file":"index.61fac3b7.js.map"}